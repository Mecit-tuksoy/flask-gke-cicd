name: Build and Deploy to GKE with ArgoCD

on:
  push:
    branches: ["main", "master"]
  pull_request:
    branches: ["main", "master"]

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GKE_CLUSTER: flask-gke-cluster
  GKE_ZONE: us-central1-a
  DEPLOYMENT_NAME: flask-app
  IMAGE: flask-app

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production

    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - id: "auth"
        name: "Authenticate to Google Cloud"
        uses: "google-github-actions/auth@v2"
        with:
          credentials_json: "${{ secrets.GCP_SA_KEY }}"

      - name: "Set up Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v2"
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: "Use gcloud CLI"
        run: "gcloud info"

      - name: Configure Docker to use gcloud as a credential helper
        run: |-
          gcloud --quiet auth configure-docker

      - name: Get the GKE credentials so we can deploy to the cluster
        run: |-
          gcloud container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_ZONE"

      - name: Build the Docker image
        run: |-
          docker build --tag "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA" .

      - name: Push the Docker image to Google Container Registry
        run: |-
          docker push "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA"

      - name: Update deployment image
        run: |-
          sed -i "s/PROJECT_ID/$PROJECT_ID/g" k8s/deployment.yaml
          sed -i "s/:latest/:$GITHUB_SHA/g" k8s/deployment.yaml

      - name: Commit and push updated manifests
        run: |-
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git add k8s/deployment.yaml
          git diff --staged --quiet || git commit -m "Update image tag to $GITHUB_SHA"
          git push

      - name: Verify deployment
        run: |-
          kubectl rollout status deployment/$DEPLOYMENT_NAME
          kubectl get services -o wide
